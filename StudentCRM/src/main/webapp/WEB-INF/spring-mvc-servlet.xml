<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

<!-- Step 3: Add Support For Component Scanning -->
<context:component-scan base-package="com.student_crm"/>

<context:property-placeholder location="classpath:application.properties,classpath:security-persistence-mysql.properties"/>

<!-- Step 4: Add Spring Conversion, Formating and Validation Support -->
<mvc:annotation-driven/>

<!-- Step 5: Define Spring MVC View Resolver -->
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<property name="prefix" value="/WEB-INF/view/"/>
<property name="suffix" value=".jsp"/>
</bean>

<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
</bean>

<bean id="mySecurityDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
<property name="driverClass" value="${security.jdbc.driver}"/>
<property name="jdbcUrl" value="${security.jdbc.url}"/>
<property name="user" value="${security.jdbc.user}"/>
<property name="password" value="${security.jdbc.password}"/>

<!-- Connection Pool Property For Cp30 -->
<property name="initialPoolSize" value="${security.connection.pool.initialPoolSize}"/>
<property name="minPoolSize" value="${security.connection.pool.minPoolSize}"/>
<property name="maxPoolSize" value="${security.connection.pool.maxPoolSize}"/>
<property name="maxIdleTime" value="${security.connection.pool.maxIdleTime}"/>
</bean>

<bean  id="securitySessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
<!-- <qualifier value="securitySessionFactory"/> -->
<property name="dataSource" ref="mySecurityDataSource"/>
<property name="packagesToScan" value="${hibernate.packagesToScan}" />
<property name="hibernateProperties">
       <props>
             <prop key="hibernate.dialect">${hibernate.dialect}</prop>
             <prop key="hibernate.sql">${hibernate.show_sql}</prop>
       </props>
</property>
</bean>

<bean id="securityTransactionManager"   class="org.springframework.orm.hibernate5.HibernateTransactionManager">
 <!-- <qualifier value="securityTransactionManager"/>   -->
<property name="sessionFactory" ref="securitySessionFactory"/>
</bean>

<!-- Hibernate Step 4: Enable Configuration Of Transactional Behavior Based On Annotations -->
<tx:annotation-driven transaction-manager="securityTransactionManager" />

<!-- Add Support To Read Web Resources: css,images,js etc -->
<mvc:resources location="/resources/" mapping="/resources/**"></mvc:resources>

</beans>
